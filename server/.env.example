# MongoDB Connection
MONGO_URI=mongodb://db:27017/mern-auth

# JWT Configuration
JWT_SECRET=your_jwt_secret_key
JWT_EXPIRE=30d

# Server Configuration
PORT=5000
NODE_ENV=development

# Google OAuth
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# GitHub OAuth
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# LinkedIn OAuth
LINKEDIN_CLIENT_ID=your_linkedin_client_id
LINKEDIN_CLIENT_SECRET=your_linkedin_client_secret

# Client URL
CLIENT_URL=http://localhost:3000

# nodemailer Config
SMTP_EMAIL=7e848b004@smtp-brevo.com
SMTP_PASS=5OE8NxLrHsXzbt9I
SMTP_HOST=smtp-relay.brevo.com
SMTP_PORT=587


RABBITMQ_URL=amqp://admin:admin_password@localhost:5672/

CLOUDINARY_CLOUD_NAME=<Cloud_name>
CLOUDINARY_CLOUD_API_KEY=<Cloud_API_Key>
CLOUDINARY_API_SECRET=<Cloud_API_Secret>


Implement the below Functionalities : 
1. Update the design and improve the UI/UX of the Register.jsx and Register_2.jsx and Login.jsx, such that for different  UserTypes the form Fields are Changes according to the User.js Scheme. For Example, for UserType == STUDENT,  then they have to enter gradYear, admissionNumber, DegreeType. But for UserType == PROFESSOR, then it has different Form Fields. Make changes...keeping the same layout. 
2. the authenticated routes can only be used if the user is logged in only. 
3. On Clicking SignIn Button, send the data and makes the necessary API CAll and signs up the User.
4. On Clicking the SignUp Button,sends the data makes the api call to the Server, waits till the response and then redirects to the Login Page for Login.
5. Also there are few Files and Folders having same functionality, like /auth and /login&register folder both has Login and Register Page. Remove this inconsistency and keep only one such pages.